
var argv = require('minimist')(process.argv.slice(2));

exports.myDateTime = function () {
 return Date();
};

//var dt = require('./myfirstmodule');

//exports.

exports.parsed_parameters = function (which) {

 if(which === null) {
  which = 'defined_keys';
 }

 // List of all actual keys
 var keys = Object.keys(argv);
 //console.log(keys);// Debugging

 // List of human defined keys passed in
 var defined_keys = []

 // Parameters with no Value passed in
 var bad_parameters = []

 // Correct Paramters
 var good_parameters = []

 for (var index = 0; index < keys.length; index++) {
  //console.log(keys[index] + ": "+ argv[keys[index]]);
  if(argv[keys[index]] === true) {
   bad_parameters.push(keys[index]);
   defined_keys.push(keys[index]);
  }
  else if((argv[keys[index]] != null) && (keys[index] != '_')) {
   good_parameters.push(keys[index]);
   defined_keys.push(keys[index]);
  }
 }

/*
 * Tried to make this a class without success
 constructor(good_parameters, bad_parameters, defined_keys) {
 */
 this.good_parameters = good_parameters;
 this.bad_parameters = bad_parameters;
 this.defined_keys = defined_keys;
 
 //}


 //get_good_parameters = function() {
 if(which == 'good_parameters') {
  return this.good_parameters;
 }
 
 //get_bad_parameters = function() {
 if(which == 'bad_parameters') {
  return this.bad_parameters;
 }

 //get_defined_keys = function() {
 if(which == 'defined_keys') {
  return this.defined_keys;
 }

}
